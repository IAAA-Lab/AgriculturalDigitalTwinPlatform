version: "3.8"

services:

#############################################
#      Collect metrics from services        #
#############################################

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./monitorization/prometheus:/etc/prometheus/
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   ports:
  #     - "9090"

#############################################
#        Collect logs from services         #
#############################################

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3100"
  #   volumes:
  #     # directory must be created first, with uid:gid 10001:10001
  #     - loki-data:/loki

#############################################
#      Centralize all metrics and logs      #
#############################################

  # grafana:
  #   image: grafana/grafana:latest
  #   volumes:
  #     - ./monitorization/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #     - grafana-data:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3010:${GRAFANA_PORT}
    # depends_on:
    #   - prometheus

#############################################
# Services communication and message queue  #
#############################################

  rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      ports:
          - 5672:${RABBITMQ_PORT}
          - 15672:${RABBITMQ_PANEL_PORT}
      environment:
          - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
          - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

#############################################
#              Web app server               #
#############################################

  gin-gonic:
    build:
      context: ./api-gateway/gin-gonic
      target: local
    ports:
        - 8080:${GIN_PORT}
    volumes:
        - ./api-gateway/gin-gonic:/app
    restart: always
    depends_on:
        - 'mongo'
        - 'rabbitmq'
    environment:
      - ENV_MODE=LOCAL
      - JWT_SECRET=${JWT_SECRET}
      - LOCAL_AUTHORIZATION=${LOCAL_AUTHORIZATION}
      - KEY_DECRYPT_PASSWD=${KEY_DECRYPT_PASSWD}
      - IV_BLOCK_PASSWD=${IV_BLOCK_PASSWD}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - REDIS_URI=${REDIS_URI}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_LANDING_ZONE=${MINIO_LANDING_ZONE}


#############################################
#               Redis server                #
#############################################

  # redis:
  #   image: redis:7
  #   ports:
  #     - 6379:${REDIS_PORT}
  #   # user and password
  #   command: bash -c "redis-server --requirepass $REDIS_PASSWORD --appendonly yes"
  #   volumes:
  #     - ./storage/redis/data:/data
  #   restart: always

#############################################
#             Digital twin panel            #
#############################################

  frontend:
    build:
      context: ./frontend/web-app
      target: build
      args:
        - VITE_PORT=${VITE_PORT}
        - VITE_API_URL=${VITE_API_URL}
        - VITE_EMAIL_SENDER_PUBKEY=${VITE_EMAIL_SENDER_PUBKEY}
        - VITE_EMAIL_SENDER_SERVICEID=${VITE_EMAIL_SENDER_SERVICEID}
        - VITE_EMAIL_SENDER_TEMPLATEID=${VITE_EMAIL_SENDER_TEMPLATEID}
        - VITE_IV_BLOCK_PASSWD=${VITE_IV_BLOCK_PASSWD}
        - VITE_KEY_DECRYPT_PASSWD=${VITE_KEY_DECRYPT_PASSWD}
        - VITE_IMAGES_SERVER_URL=${VITE_IMAGES_SERVER_URL}
    volumes:
      - ./frontend/web-app/src:/app/src
      - ./frontend/web-app/static:/app/static
      - ./frontend/web-app/vite.config.ts:/app/vite.config.ts
      - ./frontend/web-app/tsconfig.json:/app/tsconfig.json
      - ./frontend/web-app/svelte.config.js:/app/svelte.config.js
    ports:
      - 3000:3000
    depends_on:
      - gin-gonic
    command: yarn dev --host

# #############################################
# #            Digital twin storage           #
# #############################################

  mongo:
      build: storage/mongodb
      ports:
          - 27018:${MONGO_PORT}
      restart: always
      volumes:
          - ./storage/mongodb/mongodata:/data/db
          - ./storage/mongodb/init_db.js:/docker-entrypoint-initdb.d/init_db.js
      environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
        - MONGO_FIRST_USER_NAME=${MONGO_FIRST_USER_NAME}
        - MONGO_FIRST_USER_PASSWORD=${MONGO_FIRST_USER_PASSWORD}
        - MONGO_FIRST_USER_ROLE=${MONGO_FIRST_USER_ROLE}

# #############################################
# #    Data lake and Prefect flows storage    #
# #############################################

  minio:
      image: minio/minio:RELEASE.2023-02-27T18-10-45Z
      environment:
          - MINIO_ROOT_USER=${MINIO_ROOT_USER}
          - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
          - MINIO_URL=${MINIO_URL}
          - MINIO_NOTIFY_AMQP_ENABLE_primary=on
          - MINIO_NOTIFY_AMQP_URL_primary=${RABBITMQ_URI}
          - MINIO_NOTIFY_AMQP_EXCHANGE_primary=storage
          - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_primary=direct
          - MINIO_NOTIFY_AMQP_ROUTING_KEY_primary=trusted
      entrypoint:
        - sh
        - /usr/bin/entrypoint.sh

      ports:
          - 9000:${MINIO_PORT}
          - 9001:${MINIO_PANEL_PORT}
      volumes:
          - ./storage/minio/data:/data
          - ./storage/minio/entrypoint.sh:/usr/bin/entrypoint.sh
      restart: always
      depends_on:
          - rabbitmq

# #############################################
# #      Data ingestion, data processing      # 
# #      processing and machine learning      #
# #############################################

  prefect-server:
    build: data-processing/prefect
    restart: on-failure
    volumes:
      - prefect:/root/.prefect
      - ./data-processing/prefect:/opt/prefect
    environment:
      - PREFECT_LOGGING_LEVEL=WARNING
      - PREFECT_API_URL=${PREFECT_API_URL}
      # - PREFECT_API_DATABASE_PASSWORD=${PREFECT_API_DATABASE_PASSWORD}
      - PREFECT_MINIO_ACCESS_ROOT=${MINIO_ROOT_USER}
      - PREFECT_MINIO_SECRET_ROOT=${MINIO_ROOT_PASSWORD}
      - PREFECT_MINIO_HOST=${MINIO_HOST}
      - PREFECT_MONGODB_HOST=${MONGO_URI}
      - PREFECT_MONGODB_DB=${MONGO_INITDB_DATABASE}
      - AGROSLAB_AUTH_TOKEN=${AGROSLAB_AUTH_TOKEN}
      - AGROSLAB_API_URL=${AGROSLAB_API_URL}
      - AGROSLAB_TELEDETECTION_URL=${AGROSLAB_TELEDETECTION_URL}
      - STORAGE_LANDING_ZONE=${MINIO_LANDING_ZONE}
      - STORAGE_TRUSTED_ZONE=${MINIO_TRUSTED_ZONE}
      - STORAGE_REFINED_ZONE=${MINIO_REFINED_ZONE}
    ports:
      - 4200:${PREFECT_PORT}
    depends_on:
      - rabbitmq
      - mongo


volumes:
  prefect: