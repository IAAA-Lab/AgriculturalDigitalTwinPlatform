version: "3.8"

services:

  frontend-landing-page:
    container_name: landing-page
    build: frontend-landing-page
    volumes:
      - ./frontend-landing-page:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    stdin_open: true
    env_file:
      - frontend-landing-page/secrets/.env.local
  digital-twin-panel:
    container_name: digital-twin-panel
    build: digital-twin-panel
    volumes:
      - ./digital-twin-panel:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    stdin_open: true
    env_file:
      - digital-twin-panel/secrets/.env.local
      # The Go App
  backend:
    build: backend
    container_name: gin-server
    env_file:
      - backend/secrets/.env.local
    environment:
      - ENV_MODE=DOCKER
    ports:
        - "8080:8080"
    volumes:
        - ./backend:/gin-server
    command: go run ./src/internal/cmd/main.go
    restart: always
    depends_on:
        - 'mongo'
        - 'redis'
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
        - "6379:6379"
    volumes:
        - ./backend:/redis
    command: redis-server
  mongo:
      build: ./mongodb
      container_name: mongo
      ports:
          - '27018:27017'
      volumes:
          - ./mongodata:/data/db
      restart: always
      environment:
        MONGODB_ROOT_USER: "${MONGODB_ROOT_USER}"
        MONGODB_ROOT_PASSWORD: "${MONGODB_ROOT_PASSWORD}"
        MONGODB_USER: "${MONGODB_USER}"
        MONGODB_PASSWORD: "${MONGODB_PASSWORD}"
        MONGODB_DATABASE: "${MONGODB_DATABASE}"
  # Mongo Express Web-based MongoDB admin interface
  mongo_express:
      image: mongo-express
      container_name: mongo_express
      depends_on:
          - 'mongo'
      ports:
          - '8081:8081'
      restart: always
      