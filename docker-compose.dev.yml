version: "3.8"

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./backend/monitorization/prometheus:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    depends_on:
      - backend
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./backend/monitorization/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
  backend:
    build: backend/gateway/main-server
    env_file:
      - backend/gateway/main-server/secrets/.env.development
    environment:
      - GIN_MODE=release
      - ENV_MODE=DOCKER
    volumes:
      - ./backend/gateway/main-server:/gin-server
    command: go run ./src/internal/cmd/main.go
    depends_on:
      - rabbitmq
      - mongo
  frontend:
    build: frontend
    restart: always
    ports:
      - "5081:80"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  mongo:
    build: backend/gateway/database/mongodb
    ports:
        - '27018:27017'
    volumes:
        - ./backend/gateway/database/mongodb/mongodata:/data/db
    restart: always
    # env_file:
    #   - mongodb/secrets/.env
    
volumes:
  grafana-data:
  prometheus-data: