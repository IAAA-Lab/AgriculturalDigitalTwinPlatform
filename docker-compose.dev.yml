version: "3.8"

services:

  images-server:
    build: images-server
    volumes:
      - ./images-server:/app
      - /app/node_modules
    stdin_open: true
    env_file:
      - images-server/secrets/.env.development
  backend:
    build: backend
    env_file:
      - backend/secrets/.env.development
    environment:
      - GIN_MODE=release
      - ENV_MODE=DOCKER
    volumes:
      - ./backend:/gin-server
    command: go run ./src/internal/cmd/main.go
    depends_on:
      - redis
      - mongo
  frontend:
    build: frontend
    restart: always
    ports:
      - "5081:80"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  mongo:
    build: ./mongodb
    container_name: mongo
    ports:
        - '27018:27017'
    volumes:
        - ./mongodb/mongodata:/data/db
    restart: always
    env_file:
      - mongodb/secrets/.env
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
        - "6379:6379"
    volumes:
        - ./redis/redisdata:/data
    command: redis-server
